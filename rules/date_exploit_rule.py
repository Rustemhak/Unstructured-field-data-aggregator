from yargy import rule, or_
from yargy.interpretation import fact, attribute
from yargy.pipelines import morph_pipeline
from yargy.predicates import gram

from yargy_utils import gnc
from yargy_utils.date_rules import DATE

EXPLOIT_VERBS = morph_pipeline([
    'ввести',
    'вестись'
])
EXPLOIT_NOUNS = morph_pipeline([
    'разработка',
    'эксплуатация'
])
Exploit = fact('Exploit', ['date'])
# предлог
PREP = gram('PREP')
# сущиствительное
NOUN = gram('NOUN')
# прилагательное
ADJF = gram('ADJF')

EXPLOIT_VERBS_PREP_EXPLOIT_NOUN = rule(EXPLOIT_VERBS,
                                       PREP,
                                       ADJF.optional().match(gnc),
                                       EXPLOIT_NOUNS.match(gnc))
PREP_EXPLOIT_NOUN_EXPLOIT_VERBS = rule(
    PREP,
    ADJF.optional().match(gnc),
    EXPLOIT_NOUNS.match(gnc), EXPLOIT_VERBS)
EXPLOIT_NOUN_VERB = rule(EXPLOIT_NOUNS, EXPLOIT_VERBS)

EXPLOIT_DATE = rule(or_(EXPLOIT_VERBS_PREP_EXPLOIT_NOUN, PREP_EXPLOIT_NOUN_EXPLOIT_VERBS,
                        EXPLOIT_NOUN_VERB),
                    PREP,
                    DATE
                    .interpretation(Exploit.date.inflected())).interpretation(Exploit)


def exploit_date__str__(exploit_date):
    return exploit_date.date
